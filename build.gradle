subprojects {
    apply plugin: 'java'

    version = mod_version
    group = maven_group
    
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    //java.withJavadocJar()

    base {
        //Jar name
        archivesName = "${archives_name}-${project.name.toLowerCase()}-${minecraft_version}"
    }
        
    jar {
        from(rootProject.file("LICENSE")) {
            //rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'  : mod_name,
                'Specification-Vendor' : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor': mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'   : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            //rename { "${it}_${mod_name}" }
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
        maven {
            name = 'GeckoLib'
            url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 17
    }
    tasks.withType(Javadoc).configureEach {
        options.tags("apiNote:a:API Note:")
        options.tags("implSpec:a:Implementation Requirements:")
        options.tags("implNote:a:Implementation Note:")
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}